#cloud-config
autoinstall:
  version: 1
  refresh-installer:
    update: yes
  interactive-sections:
    - storage
  identity:
    hostname: secure-host
    username: secure-user
    password: "$6$kTS2D0QZCV6HXAjb$HZNC6xHQVtckeq/zkvv0xKCoxMdjlH8pUq48Zn0/fSlxa/O2v0/.5CZKCJOn9iBmckVekRt/JDOCrWfTjRtXQ/"
  locale: en_GB.UTF-8
  timezone: Europe/London
  keyboard:
    layout: us
  storage:
    layout:
      name: custom
    config:
      - id: part0
        type: partition
        size: 512M
        flag: boot
      - id: part1
        type: partition
        size: -1
      - id: vg0
        type: lvm_volgroup
        devices:
          - part1
        name: vg0
      - id: lvroot
        type: lvm_partition
        volgroup: vg0
        size: 50%
        name: root
      - id: lvhome
        type: lvm_partition
        volgroup: vg0
        size: 50%
        name: home
      - id: format-boot
        type: format
        fstype: fat32
        volume: part0
        preserve: false
      - id: format-root
        type: format
        fstype: ext4
        volume: lvroot
        preserve: false
      - id: format-home
        type: format
        fstype: ext4
        volume: lvhome
        preserve: false
      - id: mount-boot
        type: mount
        path: /boot
        device: part0
        format: format-boot
      - id: mount-root
        type: mount
        path: /
        device: lvroot
        format: format-root
      - id: mount-home
        type: mount
        path: /home
        device: lvhome
        format: format-home
  network:
    version: 2
    ethernets:
      id0:
        match:
          name: "en*"
        dhcp4: true
      id1:
        match:
          name: "eth*"
        dhcp4: true
  packages:
    - build-essential
    - network-manager
    - dkms
    - emacs-nox
    - ubuntu-desktop-minimal
    - apparmor
    - apparmor-utils
    - vim
    - gnupg
    - gnome-shell
    - gnome-software
    - gnome-tweaks
    - torbrowser-launcher
    - keepassxc
    - fail2ban
    - secure-delete
    - wipe
    - gufw
    - rkhunter
    - clamav
    - clamav-daemon
    - kleopatra
    - htop
  package_update: true
  package_upgrade: true
  snaps: []
  late-commands:
    - curtin in-target --target=/target -- sed -i 's/ds=nocloud-net[^"]*//' /etc/default/grub
    - curtin in-target --target=/target -- sed -i 's/autoinstall//' /etc/default/grub
    - curtin in-target --target=/target -- sed -i 's/GRUB_TIMEOUT=0/GRUB_TIMEOUT=5/' /etc/default/grub
    - curtin in-target --target=/target -- sed -i 's/GRUB_TIMEOUT_STYLE=hidden/GRUB_TIMEOUT_STYLE=menu/' /etc/default/grub
    - curtin in-target --target=/target -- sed -i 's/quiet autoinstall/quiet splash/' /etc/default/grub
    - curtin in-target --target=/target -- update-grub
    - curtin in-target --target=/target -- systemctl disable sssd
    - curtin in-target --target=/target -- touch /etc/cloud/cloud-init.disabled
    - curtin in-target --target=/target -- systemctl disable snapd.service
    - curtin in-target --target=/target -- systemctl disable snapd.socket
    - curtin in-target --target=/target -- systemctl disable snapd.seeded.service
    - curtin in-target --target=/target -- apt purge -y snapd
    - curtin in-target --target=/target -- rm -rf /var/cache/snapd/
    - curtin in-target --target=/target -- rm -rf /home/secure-user/snap
    - curtin in-target --target=/target -- systemctl disable systemd-networkd-wait-online.service
  runcmd:
    - echo '#!/bin/bash' > /target/root/Blackbuntu.sh
    - echo 'wget -O /tmp/Blackbuntu.sh https://raw.githubusercontent.com/DF-dev-rep/Autoinstall-Secure-Ubuntu/main/Blackbuntu.sh' >> /target/root/Blackbuntu.sh
    - echo 'chmod +x /tmp/Blackbuntu.sh' >> /target/root/Blackbuntu.sh
    - echo 'sudo /tmp/Blackbuntu.sh' >> /target/root/Blackbuntu.sh
    - curtin in-target --target=/target -- chmod +x /root/Blackbuntu.sh
    - curtin in-target --target=/target -- bash -c 'cat <<EOF > /etc/systemd/system/first-boot-delayed.service
[Unit]
Description=Run Blackbuntu script after delay
After=graphical.target
Wants=graphical.target

[Service]
ExecStart=/bin/bash -c "sleep 300; /root/Blackbuntu.sh"
Type=oneshot
RemainAfterExit=true

[Install]
WantedBy=graphical.target
EOF'
    - curtin in-target --target=/target -- systemctl enable first-boot-delayed.service

